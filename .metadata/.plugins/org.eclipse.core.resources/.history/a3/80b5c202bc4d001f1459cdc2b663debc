package study.service;

import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.time.LocalDateTime;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.web.multipart.MultipartFile;

import study.entity.EntryPermitDocumentUploadDetails;
import study.repository.PermitDocumentUploadDetailsRepository;

@Service
public class PermitRequestDocumentUploadServiceImpl implements PermitRequestDocumentUploadService {

	private final String documentType = "Aadhar";
	private final String path = "C:\\Data\\STS Workspace\\Tour-1>";

	@Autowired
	private PermitDocumentUploadDetailsRepository repository;

	@Override
	public EntryPermitDocumentUploadDetails uploadAadhar(MultipartFile file, String user_id, String reference_id) {

		String directoryPath = path + "\\" + reference_id + "\\";
		
		createDirectoryIfNotExists(directoryPath);
				
		String documentPath = directoryPath + file.getOriginalFilename();
		
		LocalDateTime createTime = LocalDateTime.now();
		try {
			file.transferTo(new File(documentPath));
		} catch (IllegalStateException | IOException e) {

			e.printStackTrace();
		}
		EntryPermitDocumentUploadDetails details = new EntryPermitDocumentUploadDetails();
		details.setCreatedBy(Long.parseLong(user_id));
		details.setCreatedTime(createTime);
		details.setDocumentPath(documentPath);
		details.setReferenceId(reference_id);
		details.setDocumentType(documentType);

		return repository.save(details);

	}

	private void createDirectoryIfNotExists(String directoryPath) {
        Path path = Paths.get(directoryPath);
        try {
            if (!Files.exists(path)) {
                Files.createDirectories(path);
                System.out.println("Directory created: " + path.toAbsolutePath());
            } else {
                System.out.println("Directory already exists: " + path.toAbsolutePath());
            }
        } catch (IOException e) {
            e.printStackTrace();
            // Consider adding more robust error handling here
        }
    }
		
	
}
