package study.service;

import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.time.LocalDateTime;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.multipart.MultipartFile;

import study.entity.EntryPermitDocumentUploadDetails;
import study.repository.PermitDocumentUploadDetailsRepository;

public class PermitRequestDocumentUploadServiceImpl implements PermitRequestDocumentUploadService {

	private final String documentType = "Aadhar";
	private final String path = "/Tour-1/Aadhar";

	@Autowired
	private PermitDocumentUploadDetailsRepository repository;

	@Override
	public EntryPermitDocumentUploadDetails uploadAadhar(MultipartFile file, String user_id, String reference_id) {

		createDirectoryIfNotExists(path + "/" + reference_id);
		String documentPath = path + "/" + reference_id + "/" + file.getOriginalFilename();
		LocalDateTime createTime = LocalDateTime.now();
		try {
			file.transferTo(new File(documentPath));
		} catch (IllegalStateException | IOException e) {

			e.printStackTrace();
		}
		EntryPermitDocumentUploadDetails details = new EntryPermitDocumentUploadDetails();
		details.setCreatedBy(Long.parseLong(user_id));
		details.setCreatedTime(createTime);
		details.setDocumentPath(documentPath);
		details.setReferenceId(reference_id);
		details.setDocumentType(documentType);

		return repository.save(details);

	}

	private void createDirectoryIfNotExists(String path) {
		Path dirPath = Paths.get(path);
		if (!Files.exists(dirPath)) {
			try {
				Files.createDirectories(dirPath);
			} catch (IOException e) {

				e.printStackTrace();
			}
		}
	}
}
